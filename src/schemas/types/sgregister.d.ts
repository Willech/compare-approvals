/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/enterprises/{orgid}.{format}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns information about the approval, if the organisation has an approval. If omitted, the ".{format}" part of the path is interpreted as ".json". */
        get: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Angir hvilken versjon av APIet som benyttes. Standardverdien er 'application/vnd.sgpub.v1', som ogsÃ¥ brukes nÃ¥r header ikke oppgis. For sikkerhets skyld anbefaler vi at denne headeren benyttes. */
                    Accept?: string;
                };
                path: {
                    /** @description Organization's official Tax ID */
                    orgid: string;
                    /** @description Angir hvilket format resultatet skal leveres pÃ¥. Man kan velge mellom 'json' (standard) eller 'xml'. */
                    format: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Returns the object containing the organization data in the format requested */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["dibk_sgdata"];
                        "application/xml": components["schemas"]["dibk_sgdata"];
                    };
                };
                /** @description Returned if the organization provided has no approval */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/enterprises.{format}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns an array over ALL the approved organisations. The result size will vary by format, but will exceed 30 MB for JSON and 80 MB for XML. It is strongly suggested to use the header 'Accept-Encoding: gzip' in the request. */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description This header must be set to 'application/vnd.sgpub.v2' in order to use this operation. */
                    Accept: string;
                    /** @description It is highly recommended to set this header to 'gzip' or 'gzip,deflate', in order to compress the response data. */
                    "Accept-encoding"?: string;
                };
                path: {
                    /** @description Specifies the response format. 'json' (default) or 'xml'. */
                    format: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["enterprise_v2"][];
                        "application/xml": components["schemas"]["enterprise_v2"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;

export interface components {
    schemas: {
        dibk_sgdata: {
            "dibk-sgdata"?: {
                status?: components["schemas"]["status"];
                enterprise?: components["schemas"]["enterprise_v1"];
                valid_approval_areas?: components["schemas"]["approval_area"][];
            };
        };
        enterprise_v1: {
            /** @description The organizational number is the unique Tax ID for the organization in the country it operates in. For Norwegian organizations this is the registration number from BRREG. */
            organizational_number?: string;
            /** @description The organization's official name */
            name?: string;
            /** @description URL to the company web site */
            www?: string;
            /** @description The company phone number */
            phone?: string;
            /** @description The company email address */
            email?: string;
            businessaddress?: components["schemas"]["address"];
            postaladdress?: components["schemas"]["address"];
        };
        enterprise_v2: {
            /** @description The organizational number is the unique Tax ID for the organization in the country it operates in. For Norwegian organizations this is the registration number from BRREG. */
            organizational_number?: string;
            /** @description The organization's official name */
            name?: string;
            /** @description URL to the company web site */
            www?: string;
            /** @description The company phone number */
            phone?: string;
            /** @description The company email address */
            email?: string;
            businessaddress?: components["schemas"]["address"];
            postaladdress?: components["schemas"]["address"];
            status?: components["schemas"]["status"];
            valid_approval_areas?: components["schemas"]["approval_area"][];
        };
        status: {
            status?: {
                /** @description Contains 'true' if the organisation is approved */
                approved?: string;
                /** Format: date */
                approval_period_to?: string;
                /** @description URL to download or view the approval certificate */
                approval_certificate?: string;
            };
        };
        /** @description Object containing info about an approval area */
        approval_area: {
            /** @description The approval area's defined function, as text */
            funtion?: string;
            /** @description The approval area's function as XML reference */
            function_xml?: string;
            /** @description The approval area's subject area, as text */
            subject_area?: string;
            /** @description The approval area's subject area, as XML reference */
            subject_area_xml?: string;
            /** @description The approval area's reference to the building law (Pbl) */
            pbl?: string;
            /** @description The approval area's reference to the building law (Pbl), as XML reference */
            pbl_xml?: string;
            /** @description The approval area's grade */
            grade?: string;
        };
        /** @description Standardized address object used for businessaddress and postal_address */
        address: {
            line_1?: string;
            line_2?: string;
            line_3?: string;
            line_4?: string;
            postal_code?: string;
            postal_town?: string;
            /** @description Abbreviated form for the country, ie. 'NO' for Norway */
            country?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
